@using Start_To_Finish.Secret
@{
    ViewData["Title"] = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--<h1>Home</h1>-->
<style>
    /* Always set the map height explicitly to define the size of the div
             * element that contains the map. */
    /*#map {*/
    /*height: 100%;
                background-color: grey;*/
    /*height: 200px;
                width: 200px;
                background-color: grey;
            }*/

    /* Optional: Makes the sample page fill the window. */
    /* html,
            body {
                height: 100%;
                margin: 0;
                padding: 0;
            }*/

    /* TODO: Step 4A1: Make a generic sidebar. */
    .open {
        width: 250px;
    }

    /* Styling for place details */
    .hero {
        width: 100%;
        height: auto;
        max-height: 166px;
        display: block;
    }

    .place,
    p {
        font-family: 'open sans', arial, sans-serif;
        padding-left: 18px;
        padding-right: 18px;
    }

    .details {
        color: darkslategrey;
    }

    a {
        text-decoration: none;
        color: cadetblue;
    }
</style>

<div class="container-fluid">
    <div id="sortableKanbanBoards" class="row">

        <!--sütun başlangıç-->
        <div class="panel panel-primary kanban-col">
            <div class="panel-heading">
                To-do
                <i class="fa fa-2x fa-plus-circle pull-right"></i>
            </div>
            <div class="panel-body">
                <div id="To-do" class="kanban-centered">

                    @foreach (var item in ViewBag.NotesToDo)
                    {
                        @if (ViewBag.NotesToDoBool)
                        {
                            <article class="kanban-entry grab" id="@item.Id" draggable="true">
                                <div class="kanban-entry-inner">
                                    <div class="kanban-label">
                                        <h2><a href="#"> @item.Title</a></h2>
                                        <p>
                                            @item.NoteInfo
                                        </p>
                                    </div>
                                </div>
                            </article>
                        }
                        else
                        {
                            <article class="kanban-entry grab" id="@item.Id" draggable="true">
                                <div class="kanban-entry-inner">
                                    <div class="kanban-label">
                                        <h2><a href="#"> @item.Title</a></h2>
                                        <p>
                                            @item.NoteInfo
                                        </p>
                                        @*<form method="post">
                                                @foreach (var option in Model.Options)
                                                {
                                                    @Html.RadioButtonFor(model => model.Option, option) @option<br />
                                                }
                                                <input type="submit" />
                                            </form>*@
                                        <p>
                                            @item.Option
                                        </p>
                                        @if (item.Option == "Responsibility")
                                        {
                                            <div id="panel@(item.Id)" style="height: 100px;width: null;
        background-color: white;
        position: fixed;
        z-index: 1;
        overflow-x: hidden;
        transition: all .2s ease-out;
"></div>
                                            <div id="map@(item.Id)" style="height:200px;width:200px;"></div>
                                            @*<iframe width="200"
                                                        height="200"
                                                        style="border:0"
                                                        loading="lazy"
                                                        allowfullscreen
                                                        src='@String.Format("https://www.google.com/maps/embed/v1/place?key={0}&q={1},+", API_Key.GoogleKey, @item.GoogleMapsInfo)'>
                                                </iframe>*@
                                            <!-- TODO: Step 1B, Add a map -->
                                            <script>
                                                let pos@(item.Id);
let map@(item.Id);
let bounds@(item.Id);
let infoWindow@(item.Id);
let currentInfoWindow@(item.Id);
let service@(item.Id);
let infoPane@(item.Id);
function initMap@(item.Id)() {
    // Initialize variables
    bounds@(item.Id) = new google.maps.LatLngBounds();
    infoWindow@(item.Id) = new google.maps.InfoWindow;
    currentInfoWindow@(item.Id) = infoWindow@(item.Id);
/* TODO: Step 4A3: Add a generic sidebar */
    infoPane@(item.Id) = document.getElementById("panel@(item.Id)");

    // Try HTML5 geolocation
    if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(position => {
        pos@(item.Id) = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
        };
        map@(item.Id) = new google.maps.Map(document.getElementById("map@(item.Id)"), {
        center: pos@(item.Id),
        zoom: 15
        });
        bounds@(item.Id).extend(pos@(item.Id));

        infoWindow@(item.Id).setPosition(pos@(item.Id));
        infoWindow@(item.Id).setContent('Location found.');
        infoWindow@(item.Id).open(map@(item.Id));
        map@(item.Id).setCenter(pos@(item.Id));

    /* TODO: Step 3B2, Call the Places Nearby Search */
        getNearbyPlaces(pos@(item.Id));
    }, () => {
        // Browser supports geolocation, but user has denied permission
        handleLocationError(true, infoWindow@(item.Id));
    });
    } else {
    // Browser doesn't support geolocation
    handleLocationError(false, infoWindow@(item.Id));
    }
}

// Handle a geolocation error
function handleLocationError(browserHasGeolocation, infoWindow) {
    // Set default location to Sydney, Australia
    pos@(item.Id) = {lat: -33.856, lng: 151.215};
    map@(item.Id) = new google.maps.Map(document.getElementById("map@(item.Id)"), {
    center: pos@(item.Id),
    zoom: 15
    });

    // Display an InfoWindow at the map center
    infoWindow@(item.Id).setPosition(pos@(item.Id));
    infoWindow@(item.Id).setContent(browserHasGeolocation ?
    'Geolocation permissions denied. Using default location.' :
    'Error: Your browser doesn\'t support geolocation.');
    infoWindow@(item.Id).open(map@(item.Id));
    currentInfoWindow@(item.Id) = infoWindow@(item.Id);

/* TODO: Step 3B3, Call the Places Nearby Search */
    getNearbyPlaces(pos@(item.Id));
}
/* END TODO: Step 2, Geolocate your user */
                                                /* TODO: Step 3B1, Call the Places Nearby Search */
                                                function getNearbyPlaces(position) {
                                                    let request@(item.Id) = {
                                                        location: position,
                                                        rankBy: google.maps.places.RankBy.DISTANCE,
                                                        keyword: '@item.GoogleMapsInfo'
                                                    };

                                                    service@(item.Id) = new google.maps.places.PlacesService(map@(item.Id));
                                                    service@(item.Id).nearbySearch(request@(item.Id), nearbyCallback);
                                                }

                                                // Handle the results (up to 20) of the Nearby Search
                                                function nearbyCallback(results, status) {
                                                    if (status == google.maps.places.PlacesServiceStatus.OK) {
                                                        createMarkers(results);
                                                    }
                                                }

                                                /* TODO: Step 3C, Generate markers for search results */
                                                // Set markers at the location of each place result
                                                function createMarkers(places) {
                                                    places.forEach(place => {
                                                        let marker@(item.Id) = new google.maps.Marker({
                                                            position: place.geometry.location,
                                                            map: map@(item.Id),
                                                            title: place.name
                                                        });

                                                        /* TODO: Step 4B: Add click listeners to the markers */
                                                        google.maps.event.addListener(marker@(item.Id), 'click', () => {
                                                            let request@(item.Id) = {
                                                                placeId: place.place_id,
                                                                fields: ['name', 'formatted_address', 'geometry', 'rating',
                                                                    'website', 'photos']
                                                            };

                                                            /* Only fetch the details of a place when the user clicks on a marker.
                                                            * If we fetch the details for all place results as soon as we get
                                                            * the search response, we will hit API rate limits. */
                                                            service@(item.Id).getDetails(request@(item.Id), (placeResult, status) => {
                                                                showDetails(placeResult, marker@(item.Id), status)
                                                            });
                                                        });
                                                        // Adjust the map bounds to include the location of this marker
                                                        bounds@(item.Id).extend(place.geometry.location);
                                                    });
                                                    /* Once all the markers have been placed, adjust the bounds of the map to
                                                    * show all the markers within the visible area. */
                                                    map@(item.Id).fitBounds(bounds@(item.Id));
                                                }

                                                /* TODO: Step 4C: Show place details in an info window */
                                                function showDetails(placeResult, marker, status) {
                                                    if (status == google.maps.places.PlacesServiceStatus.OK) {
                                                        let placeInfowindow@(item.Id) = new google.maps.InfoWindow();
                                                        placeInfowindow@(item.Id).setContent('<div><strong>' + placeResult.name +
                                                            '</strong><br>' + 'Rating: ' + placeResult.rating + '</div>');
                                                        placeInfowindow@(item.Id).open(marker.map, marker);
                                                        currentInfoWindow@(item.Id).close();
                                                        currentInfoWindow@(item.Id) = placeInfowindow@(item.Id);
                                                        showPanel(placeResult);
                                                    } else {
                                                        console.log('showDetails failed: ' + status);
                                                    }
                                                }
                                                /* TODO: Step 4D: Load place details in a sidebar */
                                                // Displays place details in a sidebar
                                                function showPanel(placeResult) {
                                                    // If infoPane is already open, close it
                                                    if (infoPane@(item.Id).classList.contains("open")) {
                                                        infoPane@(item.Id).classList.remove("open");
                                                    }

                                                    // Clear the previous details
                                                    while (infoPane@(item.Id).lastChild) {
                                                        infoPane@(item.Id).removeChild(infoPane@(item.Id).lastChild);
                                                    }

                                                    /* TODO: Step 4E: Display a Place Photo with the Place Details */

                                                    // Add place details with text formatting
                                                    let name@(item.Id) = document.createElement('h1');
                                                    name@(item.Id).classList.add('place');
                                                    name@(item.Id).textContent = placeResult.name;
                                                    infoPane@(item.Id).appendChild(name@(item.Id));
                                                    if (placeResult.rating != null) {
                                                        let rating@(item.Id) = document.createElement('p');
                                                        rating@(item.Id).classList.add('details');
                                                        rating@(item.Id).textContent = `Rating: ${placeResult.rating} \u272e`;
                                                        infoPane@(item.Id).appendChild(rating@(item.Id));
                                                    }
                                                    let address@(item.Id) = document.createElement('p');
                                                    address@(item.Id).classList.add('details');
                                                    address@(item.Id).textContent = placeResult.formatted_address;
                                                    infoPane@(item.Id).appendChild(address@(item.Id));
                                                    if (placeResult.website) {
                                                        let websitePara@(item.Id) = document.createElement('p');
                                                        let websiteLink@(item.Id) = document.createElement('a');
                                                        let websiteUrl@(item.Id) = document.createTextNode(placeResult.website);
                                                        websiteLink@(item.Id).appendChild(websiteUrl@(item.Id));
                                                        websiteLink@(item.Id).title = placeResult.website;
                                                        websiteLink@(item.Id).href = placeResult.website;
                                                        websitePara@(item.Id).appendChild(websiteLink@(item.Id));
                                                        infoPane@(item.Id).appendChild(websitePara@(item.Id));
                                                    }
                                                    /* TODO: Step 4E: Display a Place Photo with the Place Details */
                                                    // Add the primary photo, if there is one
                                                    if (placeResult.photos != null) {
                                                        let firstPhoto@(item.Id) = placeResult.photos[0];
                                                        let photo@(item.Id) = document.createElement('img');
                                                        photo@(item.Id).classList.add('hero');
                                                        photo@(item.Id).src = firstPhoto@(item.Id).getUrl();
                                                        infoPane@(item.Id).appendChild(photo@(item.Id));
                                                    }
                                                    // Open the infoPane
                                                    infoPane@(item.Id).classList.add("open");
                                                }
                                            </script>

                                            <!-- TODO: Step 1C, Get an API key -->
                                            <!-- TODO: Step 3A, Load the Places Library -->
                                            <script async defer src='@String.Format("https://maps.googleapis.com/maps/api/js?key={0}&libraries=places&callback=initMap{1}", API_Key.GoogleKey, @item.Id)'>
                                            </script>
                                        }
                                        @if (item.Option == "Learning Opportunity")
                                        {
                                    <form id="form">
                                        <div class="form-group">
                                            <input type="text" id="search" value="@item.YoutubeInfo" disabled />
                                        </div>
                                        <div class="form-group">
                                            <input type="submit" class="btn btn-danger" value="Search">
                                        </div>
                                        @Html.Hidden("API_KEY", API_Key.YoutubeKey)
                                    </form>

                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div id="videos">

                                                    </div>
                                                </div>
                                            </div>
                                        }
                                        <a asp-action="EditNote" asp-route-id="@item.Id">Edit</a>
                                        <a asp-action="EditOptions" asp-route-id="@item.Id">Edit Responsibility/Learning Opportunity</a>
                                    </div>
                                </div>
                            </article>
                        }

                        @*<article class="kanban-entry grab" id="item3" draggable="true">
                                <div class="kanban-entry-inner">
                                    <div class="kanban-label">
                                        <h2><a href="#">Arlind Nushi</a> <span>checked in at</span> <a href="#">Laborator</a></h2>

                                        <blockquote>Great place, feeling like in home.</blockquote>

                                        <div id="sample-checkin" class="map-checkin" style="height: 170px; width: 100%; position: relative; background-color: rgb(229, 227, 223); overflow: hidden; -webkit-transform: translateZ(0);"><div class="gm-style" style="position: absolute; left: 0px; top: 0px; overflow: hidden; width: 100%; height: 100%; z-index: 0;"><div style="position: absolute; left: 0px; top: 0px; overflow: hidden; width: 100%; height: 100%; z-index: 0;"><div style="position: absolute; left: 0px; top: 0px; z-index: 1; width: 100%; cursor: url(http://maps.gstatic.com/mapfiles/openhand_8_8.cur) 8 8, default; -webkit-transform-origin: 0px 0px; -webkit-transform: matrix(1, 0, 0, 1, 0, 0);"><div style="-webkit-transform: translateZ(0); position: absolute; left: 0px; top: 0px; width: 100%; z-index: 200;"><div style="-webkit-transform: translateZ(0); position: absolute; left: 0px; top: 0px; z-index: 101; width: 100%;"></div></div><div style="-webkit-transform: translateZ(0); position: absolute; left: 0px; top: 0px; width: 100%; z-index: 201;"><div style="-webkit-transform: translateZ(0); position: absolute; left: 0px; top: 0px; z-index: 102; width: 100%;"></div><div style="-webkit-transform: translateZ(0); position: absolute; left: 0px; top: 0px; z-index: 103; width: 100%;"><div style="position: absolute; left: 0px; top: 0px; z-index: -1;"><div style="position: absolute; left: 0px; top: 0px; z-index: 1;"><div style="width: 256px; height: 256px; overflow: hidden; -webkit-transform: translateZ(0); position: absolute; left: 72px; top: -176px;"><canvas draggable="false" height="256" width="256" style="-webkit-user-select: none; position: absolute; left: 0px; top: 0px; height: 256px; width: 256px;"></canvas></div><div style="width: 256px; height: 256px; overflow: hidden; -webkit-transform: translateZ(0); position: absolute; left: 72px; top: 80px;"></div><div style="width: 256px; height: 256px; overflow: hidden; -webkit-transform: translateZ(0); position: absolute; left: -184px; top: -176px;"></div><div style="width: 256px; height: 256px; overflow: hidden; -webkit-transform: translateZ(0); position: absolute; left: -184px; top: 80px;"></div><div style="width: 256px; height: 256px; overflow: hidden; -webkit-transform: translateZ(0); position: absolute; left: 328px; top: -176px;"></div><div style="width: 256px; height: 256px; overflow: hidden; -webkit-transform: translateZ(0); position: absolute; left: 328px; top: 80px;"></div></div></div></div></div><div style="-webkit-transform: translateZ(0); position: absolute; left: 0px; top: 0px; width: 100%; z-index: 202;"><div style="-webkit-transform: translateZ(0); position: absolute; left: 0px; top: 0px; z-index: 104; width: 100%;"></div><div style="-webkit-transform: translateZ(0); position: absolute; left: 0px; top: 0px; z-index: 105; width: 100%;"></div><div style="-webkit-transform: translateZ(0); position: absolute; left: 0px; top: 0px; z-index: 106; width: 100%;"></div></div><div style="-webkit-transform: translateZ(0); position: absolute; left: 0px; top: 0px; z-index: 100; width: 100%;"><div style="position: absolute; left: 0px; top: 0px; z-index: 0;"><div style="position: absolute; left: 0px; top: 0px; z-index: 1;"><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: 72px; top: -176px;"></div><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: 72px; top: 80px;"></div><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: -184px; top: -176px;"></div><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: -184px; top: 80px;"></div><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: 328px; top: -176px;"></div><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: 328px; top: 80px;"></div></div></div></div><div style="position: absolute; z-index: 0; left: 0px; top: 0px;"><div style="overflow: hidden; width: 431px; height: 170px;"><img src="http://maps.googleapis.com/maps/api/js/StaticMapService.GetMapImage?1m2&1i701363&2i1636267&2e1&3u14&4m2&1u431&2u170&5m4&1e0&5spt-BR&6sus&10b1&token=8503" style="width: 421px; height: 160px;"></div></div><div style="position: absolute; left: 0px; top: 0px; z-index: 0;"><div style="position: absolute; left: 0px; top: 0px; z-index: 1;"><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: 72px; top: -176px; opacity: 1; transition: opacity 200ms ease-out; -webkit-transition: opacity 200ms ease-out;"><img src="http://mt0.googleapis.com/vt?lyrs=m@248313357&src=apiv3&hl=pt-BR&x=2740&y=6391&z=14&style=47,37%7Csmartmaps" draggable="false" style="width: 256px; height: 256px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px; -webkit-transform: translateZ(0);"></div><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: 72px; top: 80px; opacity: 1; transition: opacity 200ms ease-out; -webkit-transition: opacity 200ms ease-out;"><img src="http://mt0.googleapis.com/vt?lyrs=m@248254527&src=apiv3&hl=pt-BR&x=2740&y=6392&z=14&style=47,37%7Csmartmaps" draggable="false" style="width: 256px; height: 256px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px; -webkit-transform: translateZ(0);"></div><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: -184px; top: -176px; opacity: 1; transition: opacity 200ms ease-out; -webkit-transition: opacity 200ms ease-out;"><img src="http://mt1.googleapis.com/vt?lyrs=m@248282439&src=apiv3&hl=pt-BR&x=2739&y=6391&z=14&style=47,37%7Csmartmaps" draggable="false" style="width: 256px; height: 256px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px; -webkit-transform: translateZ(0);"></div><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: -184px; top: 80px; opacity: 1; transition: opacity 200ms ease-out; -webkit-transition: opacity 200ms ease-out;"><img src="http://mt1.googleapis.com/vt?lyrs=m@248011677&src=apiv3&hl=pt-BR&x=2739&y=6392&z=14&style=47,37%7Csmartmaps" draggable="false" style="width: 256px; height: 256px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px; -webkit-transform: translateZ(0);"></div><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: 328px; top: -176px; opacity: 1; transition: opacity 200ms ease-out; -webkit-transition: opacity 200ms ease-out;"><img src="http://mt1.googleapis.com/vt?lyrs=m@248301220&src=apiv3&hl=pt-BR&x=2741&y=6391&z=14&style=47,37%7Csmartmaps" draggable="false" style="width: 256px; height: 256px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px; -webkit-transform: translateZ(0);"></div><div style="width: 256px; height: 256px; -webkit-transform: translateZ(0); position: absolute; left: 328px; top: 80px; opacity: 1; transition: opacity 200ms ease-out; -webkit-transition: opacity 200ms ease-out;"><img src="http://mt1.googleapis.com/vt?lyrs=m@248301220&src=apiv3&hl=pt-BR&x=2741&y=6392&z=14&style=47,37%7Csmartmaps" draggable="false" style="width: 256px; height: 256px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px; -webkit-transform: translateZ(0);"></div></div></div></div></div><div style="margin-left: 5px; margin-right: 5px; z-index: 1000000; position: absolute; left: 0px; bottom: 0px;"><a target="_blank" href="http://maps.google.com/maps?ll=36.738888,-119.783013&z=14&t=m&hl=pt-BR&gl=US&mapclient=apiv3" title="Clique para ver esta área no Google Maps" style="position: static; overflow: visible; float: none; display: inline;"><div style="width: 62px; height: 26px; cursor: pointer;"><img src="http://maps.gstatic.com/mapfiles/api-3/images/google_white2.png" draggable="false" style="position: absolute; left: 0px; top: 0px; width: 62px; height: 26px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px;"></div></a></div><div class="gmnoprint" style="z-index: 1000001; position: absolute; right: 192px; bottom: 0px; width: 85px;"><div draggable="false" class="gm-style-cc" style="-webkit-user-select: none;"><div style="opacity: 0.7; width: 100%; height: 100%; position: absolute;"><div style="width: 1px;"></div><div style="background-color: rgb(245, 245, 245); width: auto; height: 100%; margin-left: 1px;"></div></div><div style="position: relative; padding-right: 6px; padding-left: 6px; font-family: Roboto, Arial, sans-serif; font-size: 10px; color: rgb(68, 68, 68); white-space: nowrap; direction: ltr; text-align: right;"><a style="color: rgb(68, 68, 68); text-decoration: none; cursor: pointer;">Dados do mapa</a><span style="display: none;">Dados cartográficos ©2014 Google</span></div></div></div><div style="background-color: white; padding: 15px 21px; border: 1px solid rgb(171, 171, 171); font-family: Roboto, Arial, sans-serif; color: rgb(34, 34, 34); -webkit-box-shadow: rgba(0, 0, 0, 0.2) 0px 4px 16px; box-shadow: rgba(0, 0, 0, 0.2) 0px 4px 16px; z-index: 10000002; display: none; width: 256px; height: 118px; position: absolute; left: 61px; top: 5px;"><div style="padding: 0px 0px 10px; font-size: 16px;">Dados do mapa</div><div style="font-size: 13px;">Dados cartográficos ©2014 Google</div><div style="width: 13px; height: 13px; overflow: hidden; position: absolute; opacity: 0.7; right: 12px; top: 12px; z-index: 10000; cursor: pointer;"><img src="http://maps.gstatic.com/mapfiles/api-3/images/mapcnt3.png" draggable="false" style="position: absolute; left: -2px; top: -336px; width: 59px; height: 492px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px;"></div></div><div class="gmnoscreen" style="position: absolute; right: 0px; bottom: 0px;"><div style="font-family: Roboto, Arial, sans-serif; font-size: 11px; color: rgb(68, 68, 68); direction: ltr; text-align: right; background-color: rgb(245, 245, 245);">Dados cartográficos ©2014 Google</div></div><div class="gmnoprint gm-style-cc" draggable="false" style="z-index: 1000001; position: absolute; -webkit-user-select: none; right: 113px; bottom: 0px;"><div style="opacity: 0.7; width: 100%; height: 100%; position: absolute;"><div style="width: 1px;"></div><div style="background-color: rgb(245, 245, 245); width: auto; height: 100%; margin-left: 1px;"></div></div><div style="position: relative; padding-right: 6px; padding-left: 6px; font-family: Roboto, Arial, sans-serif; font-size: 10px; color: rgb(68, 68, 68); white-space: nowrap; direction: ltr; text-align: right;"><a href="http://www.google.com/intl/pt-BR_US/help/terms_maps.html" target="_blank" style="text-decoration: none; cursor: pointer; color: rgb(68, 68, 68);">Termos de Uso</a></div></div><div draggable="false" class="gm-style-cc" style="-webkit-user-select: none; position: absolute; right: 0px; bottom: 0px;"><div style="opacity: 0.7; width: 100%; height: 100%; position: absolute;"><div style="width: 1px;"></div><div style="background-color: rgb(245, 245, 245); width: auto; height: 100%; margin-left: 1px;"></div></div><div style="position: relative; padding-right: 6px; padding-left: 6px; font-family: Roboto, Arial, sans-serif; font-size: 10px; color: rgb(68, 68, 68); white-space: nowrap; direction: ltr; text-align: right;"><a target="_new" title="Informar erros no mapa ou nas imagens para o Google" href="http://maps.google.com/maps?ll=36.738888,-119.783013&z=14&t=m&hl=pt-BR&gl=US&mapclient=apiv3&skstate=action:mps_dialog$apiref:1&output=classic" style="font-family: Roboto, Arial, sans-serif; font-size: 10px; color: rgb(68, 68, 68); text-decoration: none; position: relative;">Informar erro no mapa</a></div></div><div class="gmnoprint" draggable="false" controlwidth="32" controlheight="84" style="margin: 5px; -webkit-user-select: none; position: absolute; left: 0px; top: 0px;"><div controlwidth="32" controlheight="40" style="cursor: url(http://maps.gstatic.com/mapfiles/openhand_8_8.cur) 8 8, default; position: absolute; left: 0px; top: 0px;"><div style="width: 32px; height: 40px; overflow: hidden; position: absolute; left: 0px; top: 0px;"><img src="http://maps.gstatic.com/mapfiles/api-3/images/cb_scout2.png" draggable="false" style="position: absolute; left: -9px; top: -102px; width: 1028px; height: 214px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px;"></div><div style="width: 32px; height: 40px; overflow: hidden; position: absolute; left: 0px; top: 0px; visibility: hidden;"><img src="http://maps.gstatic.com/mapfiles/api-3/images/cb_scout2.png" draggable="false" style="position: absolute; left: -107px; top: -102px; width: 1028px; height: 214px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px;"></div><div style="width: 32px; height: 40px; overflow: hidden; position: absolute; left: 0px; top: 0px; visibility: hidden;"><img src="http://maps.gstatic.com/mapfiles/api-3/images/cb_scout2.png" draggable="false" style="position: absolute; left: -58px; top: -102px; width: 1028px; height: 214px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px;"></div><div style="width: 32px; height: 40px; overflow: hidden; position: absolute; left: 0px; top: 0px; visibility: hidden;"><img src="http://maps.gstatic.com/mapfiles/api-3/images/cb_scout2.png" draggable="false" style="position: absolute; left: -205px; top: -102px; width: 1028px; height: 214px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px;"></div></div><div class="gmnoprint" controlwidth="0" controlheight="0" style="opacity: 0.6; display: none; position: absolute;"><div title="Girar o mapa em 90 graus" style="width: 22px; height: 22px; overflow: hidden; position: absolute; cursor: pointer;"><img src="http://maps.gstatic.com/mapfiles/api-3/images/mapcnt3.png" draggable="false" style="position: absolute; left: -38px; top: -360px; width: 59px; height: 492px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px;"></div></div><div class="gmnoprint" controlwidth="20" controlheight="39" style="position: absolute; left: 6px; top: 45px;"><div style="width: 20px; height: 39px; overflow: hidden; position: absolute;"><img src="http://maps.gstatic.com/mapfiles/api-3/images/mapcnt3.png" draggable="false" style="position: absolute; left: -39px; top: -401px; width: 59px; height: 492px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px;"></div><div title="Aumentar o zoom" style="position: absolute; left: 0px; top: 2px; width: 20px; height: 17px; cursor: pointer;"></div><div title="Diminuir o zoom" style="position: absolute; left: 0px; top: 19px; width: 20px; height: 17px; cursor: pointer;"></div></div></div><div class="gmnoprint" style="margin: 5px; z-index: 0; position: absolute; cursor: pointer; right: 0px; top: 0px;"><div class="gm-style-mtc" style="float: left;"><div draggable="false" title="Mostrar mapa de ruas" style="direction: ltr; overflow: hidden; text-align: center; position: relative; color: rgb(0, 0, 0); font-family: Roboto, Arial, sans-serif; -webkit-user-select: none; font-size: 11px; background-color: rgb(255, 255, 255); padding: 1px 6px; border-bottom-left-radius: 2px; border-top-left-radius: 2px; -webkit-background-clip: padding-box; background-clip: padding-box; border: 1px solid rgba(0, 0, 0, 0.14902); -webkit-box-shadow: rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px; box-shadow: rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px; min-width: 28px; font-weight: 500;">Mapa</div><div style="background-color: white; z-index: -1; padding-top: 2px; -webkit-background-clip: padding-box; background-clip: padding-box; border-width: 0px 1px 1px; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-color: rgba(0, 0, 0, 0.14902); border-bottom-color: rgba(0, 0, 0, 0.14902); border-left-color: rgba(0, 0, 0, 0.14902); -webkit-box-shadow: rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px; box-shadow: rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px; position: absolute; left: 0px; top: 19px; text-align: left; display: none;"><div draggable="false" title="Mostrar mapa de ruas com terreno" style="color: rgb(0, 0, 0); font-family: Roboto, Arial, sans-serif; -webkit-user-select: none; font-size: 11px; background-color: rgb(255, 255, 255); padding: 3px 8px 3px 5px; direction: ltr; text-align: left; white-space: nowrap;"><span role="checkbox" style="box-sizing: border-box; position: relative; line-height: 0; font-size: 0px; margin: 0px 5px 0px 0px; display: inline-block; background-color: rgb(255, 255, 255); border: 1px solid rgb(198, 198, 198); border-top-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; border-bottom-left-radius: 1px; width: 13px; height: 13px; vertical-align: middle;"><div style="position: absolute; left: 1px; top: -2px; width: 13px; height: 11px; overflow: hidden; display: none;"><img src="http://maps.gstatic.com/mapfiles/mv/imgs8.png" draggable="false" style="position: absolute; left: -52px; top: -44px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px; width: 68px; height: 67px;"></div></span><label style="vertical-align: middle; cursor: pointer;">Terreno</label></div></div></div><div class="gm-style-mtc" style="float: left;"><div draggable="false" title="Mostrar imagens de satélite" style="direction: ltr; overflow: hidden; text-align: center; position: relative; color: rgb(86, 86, 86); font-family: Roboto, Arial, sans-serif; -webkit-user-select: none; font-size: 11px; background-color: rgb(255, 255, 255); padding: 1px 6px; border-bottom-right-radius: 2px; border-top-right-radius: 2px; -webkit-background-clip: padding-box; background-clip: padding-box; border-width: 1px 1px 1px 0px; border-top-style: solid; border-right-style: solid; border-bottom-style: solid; border-top-color: rgba(0, 0, 0, 0.14902); border-right-color: rgba(0, 0, 0, 0.14902); border-bottom-color: rgba(0, 0, 0, 0.14902); -webkit-box-shadow: rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px; box-shadow: rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px; min-width: 36px;">Satélite</div><div style="background-color: white; z-index: -1; padding-top: 2px; -webkit-background-clip: padding-box; background-clip: padding-box; border-width: 0px 1px 1px; border-right-style: solid; border-bottom-style: solid; border-left-style: solid; border-right-color: rgba(0, 0, 0, 0.14902); border-bottom-color: rgba(0, 0, 0, 0.14902); border-left-color: rgba(0, 0, 0, 0.14902); -webkit-box-shadow: rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px; box-shadow: rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px; position: absolute; right: 0px; top: 19px; text-align: left; display: none;"><div draggable="false" title="Aumentar o zoom para a visualização de 45 graus" style="color: rgb(184, 184, 184); font-family: Roboto, Arial, sans-serif; -webkit-user-select: none; font-size: 11px; background-color: rgb(255, 255, 255); padding: 3px 8px 3px 5px; direction: ltr; text-align: left; white-space: nowrap; display: none;"><span role="checkbox" style="box-sizing: border-box; position: relative; line-height: 0; font-size: 0px; margin: 0px 5px 0px 0px; display: inline-block; background-color: rgb(255, 255, 255); border: 1px solid rgb(241, 241, 241); border-top-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; border-bottom-left-radius: 1px; width: 13px; height: 13px; vertical-align: middle;"><div style="position: absolute; left: 1px; top: -2px; width: 13px; height: 11px; overflow: hidden; display: none;"><img src="http://maps.gstatic.com/mapfiles/mv/imgs8.png" draggable="false" style="position: absolute; left: -52px; top: -44px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px; width: 68px; height: 67px;"></div></span><label style="vertical-align: middle; cursor: pointer;">45°</label></div><div draggable="false" title="Mostrar imagens com nomes de rua" style="color: rgb(0, 0, 0); font-family: Roboto, Arial, sans-serif; -webkit-user-select: none; font-size: 11px; background-color: rgb(255, 255, 255); padding: 3px 8px 3px 5px; direction: ltr; text-align: left; white-space: nowrap;"><span role="checkbox" style="box-sizing: border-box; position: relative; line-height: 0; font-size: 0px; margin: 0px 5px 0px 0px; display: inline-block; background-color: rgb(255, 255, 255); border: 1px solid rgb(198, 198, 198); border-top-left-radius: 1px; border-top-right-radius: 1px; border-bottom-right-radius: 1px; border-bottom-left-radius: 1px; width: 13px; height: 13px; vertical-align: middle;"><div style="position: absolute; left: 1px; top: -2px; width: 13px; height: 11px; overflow: hidden;"><img src="http://maps.gstatic.com/mapfiles/mv/imgs8.png" draggable="false" style="position: absolute; left: -52px; top: -44px; -webkit-user-select: none; border: 0px; padding: 0px; margin: 0px; width: 68px; height: 67px;"></div></span><label style="vertical-align: middle; cursor: pointer;">Marcadores</label></div></div></div></div></div></div>
                                    </div>
                                </div>
                            </article>*@
                    }
                </div>
            </div>

            <div class="panel-footer">
                <a asp-action="CreateToDo">Add a card...</a>
            </div>
        </div>
        <!--sütun bitiş-->
        <!--sütun başlangıç-->
        <div class="panel panel-primary kanban-col">
            <div class="panel-heading">
                In Progress
                <i class="fa fa-2x fa-plus-circle pull-right"></i>
            </div>
            <div class="panel-body">
                <div id="In Progress" class="kanban-centered">

                    @foreach (var item in ViewBag.NotesInProgress)
                    {

                        @if (ViewBag.NotesInProgressBool)
                        {
                            <article class="kanban-entry grab" id="@item.Id" draggable="true">
                                <div class="kanban-entry-inner">
                                    <div class="kanban-label">
                                        <h2><a href="#"> @item.Title</a></h2>
                                        <p>
                                            @item.NoteInfo
                                        </p>
                                    </div>
                                </div>
                            </article>
                        }
                        else
                        {
                            <article class="kanban-entry grab" id="@item.Id" draggable="true">
                                <div class="kanban-entry-inner">
                                    <div class="kanban-label">
                                        <h2><a href="#"> @item.Title</a></h2>
                                        <p>
                                            @item.NoteInfo
                                        </p>
                                        @*<form method="post">
                                                @foreach (var option in Model.Options)
                                                {
                                                    @Html.RadioButtonFor(model => model.Option, option) @option<br />
                                                }
                                                <input type="submit" />
                                            </form>*@
                                        <p>
                                            @item.Option
                                        </p>
                                        @if (item.Option == "Responsibility")
                                        {
                                            <div id="panel@(item.Id)" style="height: 100px;width: null;
        background-color: white;
        position: fixed;
        z-index: 1;
        overflow-x: hidden;
        transition: all .2s ease-out;
"></div>
                                            <div id="map@(item.Id)" style="height:200px;width:200px;"></div>
                                            @*<iframe width="200"
                                                        height="200"
                                                        style="border:0"
                                                        loading="lazy"
                                                        allowfullscreen
                                                        src='@String.Format("https://www.google.com/maps/embed/v1/place?key={0}&q={1},+", API_Key.GoogleKey, @item.GoogleMapsInfo)'>
                                                </iframe>*@
                                            <!-- TODO: Step 1B, Add a map -->
                                            <script>
                                                let pos;
let map;
let bounds;
let infoWindow;
let currentInfoWindow;
let service;
let infoPane;
function initMap() {
    // Initialize variables
    bounds = new google.maps.LatLngBounds();
    infoWindow = new google.maps.InfoWindow;
    currentInfoWindow = infoWindow;
/* TODO: Step 4A3: Add a generic sidebar */
    infoPane = document.getElementById("panel@(item.Id)");

    // Try HTML5 geolocation
    if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(position => {
        pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
        };
        map = new google.maps.Map(document.getElementById("map@(item.Id)"), {
        center: pos,
        zoom: 15
        });
        bounds.extend(pos);

        infoWindow.setPosition(pos);
        infoWindow.setContent('Location found.');
        infoWindow.open(map);
        map.setCenter(pos);

    /* TODO: Step 3B2, Call the Places Nearby Search */
        getNearbyPlaces(pos);
    }, () => {
        // Browser supports geolocation, but user has denied permission
        handleLocationError(true, infoWindow);
    });
    } else {
    // Browser doesn't support geolocation
    handleLocationError(false, infoWindow);
    }
}

// Handle a geolocation error
function handleLocationError(browserHasGeolocation, infoWindow) {
    // Set default location to Sydney, Australia
    pos = {lat: -33.856, lng: 151.215};
    map = new google.maps.Map(document.getElementById("map@(item.Id)"), {
    center: pos,
    zoom: 15
    });

    // Display an InfoWindow at the map center
    infoWindow.setPosition(pos);
    infoWindow.setContent(browserHasGeolocation ?
    'Geolocation permissions denied. Using default location.' :
    'Error: Your browser doesn\'t support geolocation.');
    infoWindow.open(map);
    currentInfoWindow = infoWindow;

/* TODO: Step 3B3, Call the Places Nearby Search */
    getNearbyPlaces(pos);
}
/* END TODO: Step 2, Geolocate your user */
                                                /* TODO: Step 3B1, Call the Places Nearby Search */
                                                function getNearbyPlaces(position) {
                                                    let request = {
                                                        location: position,
                                                        rankBy: google.maps.places.RankBy.DISTANCE,
                                                        keyword: '@item.GoogleMapsInfo'
                                                    };

                                                    service = new google.maps.places.PlacesService(map);
                                                    service.nearbySearch(request, nearbyCallback);
                                                }

                                                // Handle the results (up to 20) of the Nearby Search
                                                function nearbyCallback(results, status) {
                                                    if (status == google.maps.places.PlacesServiceStatus.OK) {
                                                        createMarkers(results);
                                                    }
                                                }

                                                /* TODO: Step 3C, Generate markers for search results */
                                                // Set markers at the location of each place result
                                                function createMarkers(places) {
                                                    places.forEach(place => {
                                                        let marker = new google.maps.Marker({
                                                            position: place.geometry.location,
                                                            map: map,
                                                            title: place.name
                                                        });

                                                        /* TODO: Step 4B: Add click listeners to the markers */
                                                        google.maps.event.addListener(marker, 'click', () => {
                                                            let request = {
                                                                placeId: place.place_id,
                                                                fields: ['name', 'formatted_address', 'geometry', 'rating',
                                                                    'website', 'photos']
                                                            };

                                                            /* Only fetch the details of a place when the user clicks on a marker.
                                                            * If we fetch the details for all place results as soon as we get
                                                            * the search response, we will hit API rate limits. */
                                                            service.getDetails(request, (placeResult, status) => {
                                                                showDetails(placeResult, marker, status)
                                                            });
                                                        });
                                                        // Adjust the map bounds to include the location of this marker
                                                        bounds.extend(place.geometry.location);
                                                    });
                                                    /* Once all the markers have been placed, adjust the bounds of the map to
                                                    * show all the markers within the visible area. */
                                                    map.fitBounds(bounds);
                                                }

                                                /* TODO: Step 4C: Show place details in an info window */
                                                function showDetails(placeResult, marker, status) {
                                                    if (status == google.maps.places.PlacesServiceStatus.OK) {
                                                        let placeInfowindow = new google.maps.InfoWindow();
                                                        placeInfowindow.setContent('<div><strong>' + placeResult.name +
                                                            '</strong><br>' + 'Rating: ' + placeResult.rating + '</div>');
                                                        placeInfowindow.open(marker.map, marker);
                                                        currentInfoWindow.close();
                                                        currentInfoWindow = placeInfowindow;
                                                        showPanel(placeResult);
                                                    } else {
                                                        console.log('showDetails failed: ' + status);
                                                    }
                                                }
                                                /* TODO: Step 4D: Load place details in a sidebar */
                                                // Displays place details in a sidebar
                                                function showPanel(placeResult) {
                                                    // If infoPane is already open, close it
                                                    if (infoPane.classList.contains("open")) {
                                                        infoPane.classList.remove("open");
                                                    }

                                                    // Clear the previous details
                                                    while (infoPane.lastChild) {
                                                        infoPane.removeChild(infoPane.lastChild);
                                                    }

                                                    /* TODO: Step 4E: Display a Place Photo with the Place Details */

                                                    // Add place details with text formatting
                                                    let name = document.createElement('h1');
                                                    name.classList.add('place');
                                                    name.textContent = placeResult.name;
                                                    infoPane.appendChild(name);
                                                    if (placeResult.rating != null) {
                                                        let rating = document.createElement('p');
                                                        rating.classList.add('details');
                                                        rating.textContent = `Rating: ${placeResult.rating} \u272e`;
                                                        infoPane.appendChild(rating);
                                                    }
                                                    let address = document.createElement('p');
                                                    address.classList.add('details');
                                                    address.textContent = placeResult.formatted_address;
                                                    infoPane.appendChild(address);
                                                    if (placeResult.website) {
                                                        let websitePara = document.createElement('p');
                                                        let websiteLink = document.createElement('a');
                                                        let websiteUrl = document.createTextNode(placeResult.website);
                                                        websiteLink.appendChild(websiteUrl);
                                                        websiteLink.title = placeResult.website;
                                                        websiteLink.href = placeResult.website;
                                                        websitePara.appendChild(websiteLink);
                                                        infoPane.appendChild(websitePara);
                                                    }
                                                    /* TODO: Step 4E: Display a Place Photo with the Place Details */
                                                    // Add the primary photo, if there is one
                                                    if (placeResult.photos != null) {
                                                        let firstPhoto = placeResult.photos[0];
                                                        let photo = document.createElement('img');
                                                        photo.classList.add('hero');
                                                        photo.src = firstPhoto.getUrl();
                                                        infoPane.appendChild(photo);
                                                    }
                                                    // Open the infoPane
                                                    infoPane.classList.add("open");
                                                }
                                            </script>

                                            <!-- TODO: Step 1C, Get an API key -->
                                            <!-- TODO: Step 3A, Load the Places Library -->
                                            <script async defer src='@String.Format("https://maps.googleapis.com/maps/api/js?key={0}&libraries=places&callback=initMap",API_Key.GoogleKey)'>
                                            </script>
                                        }
                                        <p id="Timer @item.Id"></p>
                                        <script>
                                            //var jsonSettings = new JsonSerializerSettings();
//jsonSettings.DateFormatString = "dd/MM/yyy hh:mm:ss";
//var modelFromDate = JsonConvert.SerializeObject(@item.StartDate, jsonSettings);
                                            //var start = Date.now();
                                            var start@(item.Id) = new Date(Date.parse("@item.StartDate.ToString()"));
                                           //var start = new Date(Date.parse(modelFromDate));
                                            var myVar = setInterval(myTimer, 1000);
                                            function myTimer() {
                                                var d = new Date();
                                                var end@(item.Id) = Date.now();
                                                var elapsed@(item.Id) = end@(item.Id) - start@(item.Id);
                                                //debugger;
                                               //document.getElementById("demo " + "@item.Id").innerHTML = d.toLocaleTimeString();
                                                document.getElementById("Timer " + "@item.Id").innerHTML = elapsed@(item.Id)/1000;
                                            }
                                        </script>
                                        <a asp-action="EditNote" asp-route-id="@item.Id">Edit</a>
                                        <a asp-action="EditOptions" asp-route-id="@item.Id">Edit Responsibility/Learning Opportunity</a>
                                    </div>
                                </div>
                            </article>
                        }
                    }
                    @*<article class="kanban-entry grab" id="item-7" draggable="true">
                            <div class="kanban-entry-inner">
                                <div class="kanban-label">
                                    <h2><a href="#">Test Card</a> <span>posted a status update</span></h2>
                                    <p>
                                        Just an example
                                    </p>
                                </div>
                            </div>
                        </article>*@
                </div>
            </div>
            @*<div class="panel-footer">
                    <a asp-action="CreateInProgress">Add a card...</a>
                </div>*@
        </div>
        <!--sütun bitiş-->
        <!--sütun başlangıç-->
        <div class="panel panel-primary kanban-col">
            <div class="panel-heading">
                Complete
                <i class="fa fa-2x fa-plus-circle pull-right"></i>
            </div>
            <div class="panel-body">
                <div id="Complete" class="kanban-centered">

                    @foreach (var item in ViewBag.NotesComplete)
                    {

                        @if (ViewBag.NotesCompleteBool)
                        {
                            <article class="kanban-entry grab" id="@item.Id" draggable="true">
                                <div class="kanban-entry-inner">
                                    <div class="kanban-label">
                                        <h2><a href="#"> @item.Title</a></h2>
                                        <p>
                                            @item.NoteInfo
                                        </p>
                                    </div>
                                </div>
                            </article>
                        }
                        else
                        {
                            <article class="kanban-entry grab" id="@item.Id" draggable="true">
                                <div class="kanban-entry-inner">
                                    <div class="kanban-label">
                                        <h2><a href="#"> @item.Title</a></h2>
                                        <p>
                                            @item.NoteInfo
                                        </p>
                                        @*<form method="post">
                                                <input type="radio" value="" id="Option" name="Option" />Male<br />
                                                <input type="submit" />
                                            </form>*@
                                        <p>
                                            @item.Option
                                        </p>
                                        @if (item.Option == "Responsibility")
                                        {

                                            <div id="panel@(item.Id)" style="height: 100px;width: null;
        background-color: white;
        position: fixed;
        z-index: 1;
        overflow-x: hidden;
        transition: all .2s ease-out;
"></div>
                                            <div id="map@(item.Id)" style="height:200px;width:200px;"></div>
                                            @*<iframe width="200"
                                                        height="200"
                                                        style="border:0"
                                                        loading="lazy"
                                                        allowfullscreen
                                                        src='@String.Format("https://www.google.com/maps/embed/v1/place?key={0}&q={1},+", API_Key.GoogleKey, @item.GoogleMapsInfo)'>
                                                </iframe>*@
                                            <!-- TODO: Step 1B, Add a map -->
                                            <script>
                                                let pos@(item.Id);
let map@(item.Id);
let bounds@(item.Id);
let infoWindow@(item.Id);
let currentInfoWindow@(item.Id);
let service@(item.Id);
let infoPane@(item.Id);
function initMap@(item.Id)() {
    // Initialize variables
    bounds@(item.Id) = new google.maps.LatLngBounds();
    infoWindow@(item.Id) = new google.maps.InfoWindow;
    currentInfoWindow@(item.Id) = infoWindow@(item.Id);
/* TODO: Step 4A3: Add a generic sidebar */
    infoPane@(item.Id) = document.getElementById("panel@(item.Id)");

    // Try HTML5 geolocation
    if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(position => {
        pos@(item.Id) = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
        };
        map@(item.Id) = new google.maps.Map(document.getElementById("map@(item.Id)"), {
        center: pos@(item.Id),
        zoom: 15
        });
        bounds@(item.Id).extend(pos@(item.Id));

        infoWindow@(item.Id).setPosition(pos@(item.Id));
        infoWindow@(item.Id).setContent('Location found.');
        infoWindow@(item.Id).open(map@(item.Id));
        map@(item.Id).setCenter(pos@(item.Id));

    /* TODO: Step 3B2, Call the Places Nearby Search */
        getNearbyPlaces(pos@(item.Id));
    }, () => {
        // Browser supports geolocation, but user has denied permission
        handleLocationError(true, infoWindow@(item.Id));
    });
    } else {
    // Browser doesn't support geolocation
    handleLocationError(false, infoWindow@(item.Id));
    }
}

// Handle a geolocation error
function handleLocationError(browserHasGeolocation, infoWindow) {
    // Set default location to Sydney, Australia
    pos@(item.Id) = {lat: -33.856, lng: 151.215};
    map@(item.Id) = new google.maps.Map(document.getElementById("map@(item.Id)"), {
    center: pos@(item.Id),
    zoom: 15
    });

    // Display an InfoWindow at the map center
    infoWindow@(item.Id).setPosition(pos@(item.Id));
    infoWindow@(item.Id).setContent(browserHasGeolocation ?
    'Geolocation permissions denied. Using default location.' :
    'Error: Your browser doesn\'t support geolocation.');
    infoWindow@(item.Id).open(map@(item.Id));
    currentInfoWindow@(item.Id) = infoWindow@(item.Id);

/* TODO: Step 3B3, Call the Places Nearby Search */
    getNearbyPlaces(pos@(item.Id));
}
/* END TODO: Step 2, Geolocate your user */
                                                /* TODO: Step 3B1, Call the Places Nearby Search */
                                                function getNearbyPlaces(position) {
                                                    let request@(item.Id) = {
                                                        location: position,
                                                        rankBy: google.maps.places.RankBy.DISTANCE,
                                                        keyword: '@item.GoogleMapsInfo'
                                                    };

                                                    service@(item.Id) = new google.maps.places.PlacesService(map@(item.Id));
                                                    service@(item.Id).nearbySearch(request@(item.Id), nearbyCallback);
                                                }

                                                // Handle the results (up to 20) of the Nearby Search
                                                function nearbyCallback(results, status) {
                                                    if (status == google.maps.places.PlacesServiceStatus.OK) {
                                                        createMarkers(results);
                                                    }
                                                }

                                                /* TODO: Step 3C, Generate markers for search results */
                                                // Set markers at the location of each place result
                                                function createMarkers(places) {
                                                    places.forEach(place => {
                                                        let marker@(item.Id) = new google.maps.Marker({
                                                            position: place.geometry.location,
                                                            map: map@(item.Id),
                                                            title: place.name
                                                        });

                                                        /* TODO: Step 4B: Add click listeners to the markers */
                                                        google.maps.event.addListener(marker@(item.Id), 'click', () => {
                                                            let request@(item.Id) = {
                                                                placeId: place.place_id,
                                                                fields: ['name', 'formatted_address', 'geometry', 'rating',
                                                                    'website', 'photos']
                                                            };

                                                            /* Only fetch the details of a place when the user clicks on a marker.
                                                            * If we fetch the details for all place results as soon as we get
                                                            * the search response, we will hit API rate limits. */
                                                            service@(item.Id).getDetails(request@(item.Id), (placeResult, status) => {
                                                                showDetails(placeResult, marker@(item.Id), status)
                                                            });
                                                        });
                                                        // Adjust the map bounds to include the location of this marker
                                                        bounds@(item.Id).extend(place.geometry.location);
                                                    });
                                                    /* Once all the markers have been placed, adjust the bounds of the map to
                                                    * show all the markers within the visible area. */
                                                    map@(item.Id).fitBounds(bounds@(item.Id));
                                                }

                                                /* TODO: Step 4C: Show place details in an info window */
                                                function showDetails(placeResult, marker, status) {
                                                    if (status == google.maps.places.PlacesServiceStatus.OK) {
                                                        let placeInfowindow@(item.Id) = new google.maps.InfoWindow();
                                                        placeInfowindow@(item.Id).setContent('<div><strong>' + placeResult.name +
                                                            '</strong><br>' + 'Rating: ' + placeResult.rating + '</div>');
                                                        placeInfowindow@(item.Id).open(marker.map, marker);
                                                        currentInfoWindow@(item.Id).close();
                                                        currentInfoWindow@(item.Id) = placeInfowindow@(item.Id);
                                                        showPanel(placeResult);
                                                    } else {
                                                        console.log('showDetails failed: ' + status);
                                                    }
                                                }
                                                /* TODO: Step 4D: Load place details in a sidebar */
                                                // Displays place details in a sidebar
                                                function showPanel(placeResult) {
                                                    // If infoPane is already open, close it
                                                    if (infoPane@(item.Id).classList.contains("open")) {
                                                        infoPane@(item.Id).classList.remove("open");
                                                    }

                                                    // Clear the previous details
                                                    while (infoPane@(item.Id).lastChild) {
                                                        infoPane@(item.Id).removeChild(infoPane@(item.Id).lastChild);
                                                    }

                                                    /* TODO: Step 4E: Display a Place Photo with the Place Details */

                                                    // Add place details with text formatting
                                                    let name@(item.Id) = document.createElement('h1');
                                                    name@(item.Id).classList.add('place');
                                                    name@(item.Id).textContent = placeResult.name;
                                                    infoPane@(item.Id).appendChild(name@(item.Id));
                                                    if (placeResult.rating != null) {
                                                        let rating@(item.Id) = document.createElement('p');
                                                        rating@(item.Id).classList.add('details');
                                                        rating@(item.Id).textContent = `Rating: ${placeResult.rating} \u272e`;
                                                        infoPane@(item.Id).appendChild(rating@(item.Id));
                                                    }
                                                    let address@(item.Id) = document.createElement('p');
                                                    address@(item.Id).classList.add('details');
                                                    address@(item.Id).textContent = placeResult.formatted_address;
                                                    infoPane@(item.Id).appendChild(address@(item.Id));
                                                    if (placeResult.website) {
                                                        let websitePara@(item.Id) = document.createElement('p');
                                                        let websiteLink@(item.Id) = document.createElement('a');
                                                        let websiteUrl@(item.Id) = document.createTextNode(placeResult.website);
                                                        websiteLink@(item.Id).appendChild(websiteUrl@(item.Id));
                                                        websiteLink@(item.Id).title = placeResult.website;
                                                        websiteLink@(item.Id).href = placeResult.website;
                                                        websitePara@(item.Id).appendChild(websiteLink@(item.Id));
                                                        infoPane@(item.Id).appendChild(websitePara@(item.Id));
                                                    }
                                                    /* TODO: Step 4E: Display a Place Photo with the Place Details */
                                                    // Add the primary photo, if there is one
                                                    if (placeResult.photos != null) {
                                                        let firstPhoto@(item.Id) = placeResult.photos[0];
                                                        let photo@(item.Id) = document.createElement('img');
                                                        photo@(item.Id).classList.add('hero');
                                                        photo@(item.Id).src = firstPhoto@(item.Id).getUrl();
                                                        infoPane@(item.Id).appendChild(photo@(item.Id));
                                                    }
                                                    // Open the infoPane
                                                    infoPane@(item.Id).classList.add("open");
                                                }
                                            </script>

                                            <!-- TODO: Step 1C, Get an API key -->
                                            <!-- TODO: Step 3A, Load the Places Library -->
                                            <script async defer src='@String.Format("https://maps.googleapis.com/maps/api/js?key={0}&libraries=places&callback=initMap{1}", API_Key.GoogleKey, @item.Id)'>
                                            </script>
                                        }
                                        <a asp-action="EditNote" asp-route-id="@item.Id">Edit Note</a>
                                        <a asp-action="EditOptions" asp-route-id="@item.Id">Edit Responsibility/Learning Opportunity</a>
                                    </div>
                                </div>
                            </article>
                        }
                    }
                </div>
            </div>
            @*<div class="panel-footer">
                    <a asp-action="CreateComplete">Add a card...</a>
                </div>*@
            @*<ul id="sortable1" class="connectedSortable">
                    <li class="ui-state-default">Item 1</li>
                    <li class="ui-state-default">Item 2</li>
                    <li class="ui-state-default">Item 3</li>
                    <li class="ui-state-default">Item 4</li>
                    <li class="ui-state-default">Item 5</li>
                </ul>

                <ul id="sortable2" class="connectedSortable">
                    <li class="ui-state-highlight">Item 1</li>
                    <li class="ui-state-highlight">Item 2</li>
                    <li class="ui-state-highlight">Item 3</li>
                    <li class="ui-state-highlight">Item 4</li>
                    <li class="ui-state-highlight">Item 5</li>
                </ul>*@
        </div>
        <!--sütun bitiş-->


    </div>
</div>


<!-- Static Modal -->
<div class="modal modal-static fade" id="processing-modal" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="text-center">
                    <i class="fa fa-refresh fa-5x fa-spin"></i>
                    <h4>Processing...</h4>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/site.js"></script>
<script>
    //var API_KEY = <%=API_Key.YoutubeKey%>;
</script>
<script src="~/js/script.js"></script>

